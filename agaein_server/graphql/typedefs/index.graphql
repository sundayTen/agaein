# Custom Scalars
scalar Date
scalar Upload

type File {
    filename: String!
    mimetype: String!
    encoding: String!
}

type Query {
    # User
    user(id: ID!): User
    me: User!
    profile: Profile!
    # Article
    articles(boardType: BOARD_TYPE!, offset: Int, limit: Int, order: ARTICLE_ORDER, search: String): [Article]!
    article(id: ID!): Article
    articleLength(boardType: BOARD_TYPE!): Int!
    # Breed
    breeds(type: BREED_TYPE!): [Breed]!
    bookmarks: [Bookmark]!
    # Report
    reports(articleId: ID!): [Report]!
    # Crawling
    crawlingResults(id: ID!): [CrawlingResult]!
    crawlingHistory: [CrawlingHistory]!
}

type Mutation {
    # User
    login(kakaoId: String!): Login!
    updateUser(nickname: String, email: String, phoneNumber: String): User!
    # Article
    createArticle(boardType: BOARD_TYPE!, files: [Upload]!, articleDetail: ArticleDetailInput!): Article!
    updateArticle(id: ID!, files: [Upload]!, articleDetail: ArticleDetailInput!): Article!
    deleteArticle(id: ID!, password: String): ID!
    createComment(articleId: ID!, commentId: ID, content: String!, password: String): Comment!
    updateComment(id: ID!, content: String!, password: String): Comment!
    deleteComment(id: ID!, password: String): ID!
    # Breed
    createBreed(type: BREED_TYPE!, breed: String!): Breed!
    deleteBreed(id: ID!): ID!
    # Bookmark
    createBookmark(articleId: ID!): Bookmark!
    deleteBookmark(id: ID!): ID!
    # Report
    createReport(files: [Upload]!, report: ReportInput!): Report!
    updateReport(id: ID!, files: [Upload]!, report: UpdateReportInput!): Report!
    deleteReport(id: ID!, password: String): ID!
    # Crawling
    crawling(baseInfo: CrawlingInput!): ID!
}
