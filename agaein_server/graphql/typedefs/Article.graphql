enum BOARD_TYPE {
    LFP
    LFG
    REVIEW
}

enum GENDER {
    MALE
    FEMAEL
    UNKNOWN
}

enum ARTICLE_ORDER {
    NEW
    OLD
    VIEW
}

enum FINDING_STATUS {
    FINDING
    DONE
}

type Location {
    lat: Float!
    lng: Float!
    address: String!
    roadAddress: String
    detail: String
}

type LFG {
    id: ID!
    type: BREED_TYPE!
    breed: String!
    name: String
    feature: String
    gender: GENDER
    age: Int
    alarm: Boolean
    status: FINDING_STATUS!
    email: String
    keyword: [String]
    location: Location!
    foundDate: Date!
}

type LFP {
    id: ID!
    type: BREED_TYPE!
    breed: String!
    name: String
    feature: String
    gender: GENDER
    gratuity: Int
    age: Int
    alarm: Boolean
    status: FINDING_STATUS!
    email: String
    keyword: [String]
    location: Location!
    lostDate: Date!
}

type REVIEW {
    id: ID!
    articleId: ID
    title: String
    content: String
}

union ArticleDetail = LFG | LFP | REVIEW

type Article {
    id: ID!
    images: [String]!
    view: Int!
    type: BOARD_TYPE!
    articleDetail: ArticleDetail!
    comments: [Comment]
    author: User!
    createdAt: Date!
    updatedAt: Date!
}

input LocationInput {
    lat: Float!
    lng: Float!
    address: String!
    roadAddress: String
    detail: String
}

input ArticleDetailInput {
    breedId: ID
    articleId: ID
    name: String
    feature: String
    gender: GENDER
    location: LocationInput
    foundDate: Date
    age: Int
    password: String
    alarm: Boolean
    email: String
    keyword: [String]
    lostDate: Date
    gratuity: Int
    title: String
    content: String
}
